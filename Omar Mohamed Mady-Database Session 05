#  SQL Assignment 04 – ITI DB & AdventureWorks2012
**Student Name:** Omar Mohamed
**Date:** March 2025
**Database Used:** ITI DB & AdventureWorks2012

---

##  Part 01 – ITI DB Queries
### 1. 1. Display instructors who have salaries less than the average salary of all instructors.
```sql
SELECT *
FROM Instructor
WHERE Salary < (SELECT AVG(Salary) FROM Instructor);
```

### 2. 2. Display the Department name that contains the instructor who receives the minimum salary.
```sql
SELECT Dept.Name
FROM Department Dept
JOIN Instructor I ON Dept.ID = I.Dept_ID
WHERE I.Salary = (SELECT MIN(Salary) FROM Instructor);
```

### 3. 3. Display the data of the department which has the smallest employee ID over all employees' ID.
```sql
SELECT D.*
FROM Department D
JOIN Employee E ON D.ID = E.Dept_ID
WHERE E.ID = (SELECT MIN(ID) FROM Employee);
```

### 4. 4. List the last name of all managers who have no dependents.
```sql
SELECT E.LastName
FROM Employee E
WHERE E.ID IN (SELECT Manager_ID FROM Department)
AND E.ID NOT IN (SELECT Emp_ID FROM Dependent);
```

### 5. 5. For each department-- if its average salary is less than the average salary of all employees, display its number, name and number of its employees.
```sql
SELECT D.ID, D.Name, COUNT(E.ID) AS EmployeeCount
FROM Department D
JOIN Employee E ON D.ID = E.Dept_ID
GROUP BY D.ID, D.Name
HAVING AVG(E.Salary) < (SELECT AVG(Salary) FROM Employee);
```

### 6. 6. Try to get the max 2 salaries using subquery.
```sql
SELECT *
FROM Instructor
WHERE Salary IN (
  SELECT DISTINCT TOP 2 Salary
  FROM Instructor
  ORDER BY Salary DESC
);
```

### 7. 7. Write a query to select the highest two salaries in Each Department for instructors who have salaries.
```sql
SELECT *
FROM (
  SELECT *, RANK() OVER (PARTITION BY Dept_ID ORDER BY Salary DESC) AS Rank
  FROM Instructor
  WHERE Salary IS NOT NULL
) AS Ranked
WHERE Rank <= 2;
```

### 8. 8. Write a query to select a random student from each department.
```sql
SELECT *
FROM (
  SELECT *, ROW_NUMBER() OVER (PARTITION BY Dept_ID ORDER BY NEWID()) AS RN
  FROM Student
) AS RandomStudent
WHERE RN = 1;
```

---
##  Part 02 – AdventureWorks2012 Queries
### 1. 1. Display SalesOrderID, ShipDate for orders between '7/28/2002' and '7/29/2014'.
```sql
SELECT SalesOrderID, ShipDate
FROM Sales.SalesOrderHeader
WHERE ShipDate BETWEEN '2002-07-28' AND '2014-07-29';
```

### 2. 2. Display products with StandardCost below $110.
```sql
SELECT ProductID, Name
FROM Production.Product
WHERE StandardCost < 110.00;
```

### 3. 3. Display ProductID, Name where weight is unknown.
```sql
SELECT ProductID, Name
FROM Production.Product
WHERE Weight IS NULL;
```

### 4. 4. Display products with Silver, Black, or Red color.
```sql
SELECT *
FROM Production.Product
WHERE Color IN ('Silver', 'Black', 'Red');
```

### 5. 5. Display products where the name starts with 'B'.
```sql
SELECT *
FROM Production.Product
WHERE Name LIKE 'B%';
```

### 6. 6. Update a product description, then display any description with underscore '_'.
```sql
-- Update
UPDATE Production.ProductDescription
SET Description = 'Chromoly steel_High of defects'
WHERE ProductDescriptionID = 3;

-- Select with underscore
SELECT *
FROM Production.ProductDescription
WHERE Description LIKE '%\_%' ESCAPE '\';
```

### 7. 8. Display distinct employee hire dates.
```sql
SELECT DISTINCT HireDate
FROM HumanResources.Employee;
```

### 8. 9. Display product name and price between 100 and 120 in a custom message format.
```sql
SELECT CONCAT('The ', Name, ' is only! ', ListPrice) AS Message
FROM Production.Product
WHERE ListPrice BETWEEN 100 AND 120
ORDER BY ListPrice;
```
